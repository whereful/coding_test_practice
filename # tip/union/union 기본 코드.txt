

def find_parent(i):
    if parent[i] == i:
        return parent[i]
    parent[i] = find_parent(parent[i])
    return parent[i]


def union(a, b):
    a = find_parent(a)
    b = find_parent(b)

    if a < b:
        parent[b] = a
    else:
        parent[a] = b


# 0부터 시작, 1부터 시작에 따라 n, n + 1로 나뉨
parent = [i for i in range(n)]

edges = []


for a, b in edges:
    # 사이클이 발생하지 않으면
    if find_parent(a) != find_parent(b):
        # 각 간선에 대해서 집합을 합침
        union(a, b)

# 간선을 1번만 전체 순회하면 부모가 제대로 설정되지 않음
for i in range(1, n +1):
    find_parent(i)
